[gcode_macro SMART_PARK]
description: Parks your printhead near the print area for pre-print hotend heating.
gcode:

    {% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}                                                                 # Pull all variables from _KAMP_Settings
    {% set bed_x_max = printer["gcode_macro PRINTER_PARAM"].max_x_position | float %}                                               # Set printable bed area
    {% set bed_y_max = printer["gcode_macro PRINTER_PARAM"].max_y_position | float %}                                                                           
    {% set z_height = kamp_settings.smart_park_height | float %}                                                                    # Set Z height variable
    {% set purge_margin = kamp_settings.purge_margin | float %}                                                                     # Set purge margin variable
    {% set purge_amount = kamp_settings.purge_amount | float %}
    {% set verbose_enable = kamp_settings.verbose_enable | abs %}                                                                   # Set verbosity
    {% set center_x = bed_x_max / 2 %}                                                                                            # Create center point of x for fallback
    {% set center_y = bed_y_max / 2 %}                                                                                            # Create center point of y for fallback
    {% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
    {% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}
    {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}                                # Gather all object points
    {% set x_min = (all_points | map(attribute=0) | min | default(0)) %}                                                            # Set x_min from smallest object x point
    {% set x_max = (all_points | map(attribute=0) | max | default(0)) %}
    {% set y_min = (all_points | map(attribute=1) | min | default(0)) %}                                                            # Set y_min from smallest object y point
    {% set y_max = (all_points | map(attribute=1) | max | default(0)) %}
    {% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}                                                           # Set travel speed from config
    {% set rapid_move = 10 %}

    {% set park_x_center = ([((x_max + x_min) / 2) - (purge_amount / 2), 0] | max) %}                                               # Determine purge origin
    {% set park_y_center = ([((y_max + y_min) / 2) - (purge_amount / 2), 0] | max) %}
    {% if (park_x_center + purge_amount + rapid_move) > bed_x_max %}
        {% set park_x_center = (bed_x_max - (purge_amount + rapid_move)) %}
    {% endif %}
    {% if (park_y_center + purge_amount + rapid_move) > bed_y_max %}
        {% set park_y_center = (bed_y_max - (purge_amount + rapid_move)) %}
    {% endif %}

    {% set park_x_origin_low = (x_min - purge_margin) %}                                         
    {% set park_x_origin_high = (x_max + purge_margin) %}                                        
    {% set park_y_origin_low = (y_min - purge_margin) %}                                         
    {% set park_y_origin_high = (y_max + purge_margin) %}

    {% set detect_object = (x_min + x_max + y_min + y_max) %}                                                                       # Create variable used for object detection

    {% if detect_object == 0 %}                                                                                                     # Park at center point if no objects detected
        {% set x_min = center_x %}
        {% set y_min = center_y %}
    {% elif park_y_origin_low > 0 %}                                                                                                # Set park coordinates to beginning of purge line or blob
        {% set x_min = park_x_center %}
        {% set y_min = park_y_origin_low %}
    {% elif park_x_origin_low > 0 %}
        {% set x_min = park_x_origin_low %}
        {% set y_min = park_y_center %}
    {% elif park_y_origin_high < bed_y_max %}
        {% set x_min = park_x_center %}
        {% set y_min = park_y_origin_high %}
    {% elif park_x_origin_high < bed_x_max %}
        {% set x_min = park_x_origin_high %}
        {% set y_min = park_y_center %}
    {% else %}
        {% set x_min = ((x_min + x_max)/2) %}
        {% set y_min = ((y_min + y_max)/2) %}
    {% endif %}

                                                                                                                                    
    {% if verbose_enable == True %}                                                                                                 # Verbose park location

    { action_respond_info("Smart Park location: {},{}.".format(
        (x_min),
        (y_min),
    )) }

    {% endif %}

    {% if printer.toolhead.position.z < z_height %}
        G0 Z{z_height}                                                                                                              # Move Z to park height if current Z position is lower than z_height
    {% endif %}
    G0 X{x_min} Y{y_min} F{travel_speed}                                                                                            # Move near object area
    G0 Z{z_height}                                                                                                                  # Move Z to park height 
